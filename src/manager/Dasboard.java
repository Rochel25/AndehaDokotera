/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package manager;

import com.toedter.calendar.JDateChooser;
import org.jdesktop.swingx.prompt.PromptSupport;
import java.awt.Color;
import org.hibernate.Session;
import model.*;
import entity.Patient;
import entity.Medecin;
import entity.Visiter;
import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.Iterator;
import model.MedecinTableModel;
import model.VisiterTableModel;
import java.util.List;
import javax.swing.JOptionPane;
import org.hibernate.HibernateException;
import org.hibernate.Query;
import org.hibernate.Transaction;


/**
 *
 * @author rindr
 */
public class Dasboard extends javax.swing.JFrame {
    
    
    
    Color ClicColor, DefautColor;
    

    /**
     * Creates new form Dasboard
     */
    public Dasboard() {
        initComponents();
        FillData();
        ClicColor=new Color(127,242,2);
        DefautColor=new Color(0,51,51);
        
        Menu1.setBackground(ClicColor);
        Menu2.setBackground(DefautColor);
        Menu3.setBackground(DefautColor);
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jFrame1 = new javax.swing.JFrame();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        Menu1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        Menu2 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        Menu3 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel10 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        nom = new javax.swing.JTextField();
        prenom = new javax.swing.JTextField();
        grade = new javax.swing.JTextField();
        ajouterMed = new javax.swing.JButton();
        ModifierMed = new javax.swing.JButton();
        supprimerMed = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jPanel11 = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        nomp = new javax.swing.JTextField();
        prenomp = new javax.swing.JTextField();
        ajouterPat = new javax.swing.JButton();
        ModifierPat = new javax.swing.JButton();
        supprimerPat = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        Sexe = new javax.swing.JComboBox<>();
        jLabel11 = new javax.swing.JLabel();
        adresse = new javax.swing.JTextField();
        recherche = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jPanel9 = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel();
        ajouterV = new javax.swing.JButton();
        ModifierV = new javax.swing.JButton();
        supprimerV = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        MedecinCombobox = new javax.swing.JComboBox<>();
        PatientCombobox = new javax.swing.JComboBox<>();
        dateV = new datechooser.beans.DateChooserCombo();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable3 = new javax.swing.JTable();

        javax.swing.GroupLayout jFrame1Layout = new javax.swing.GroupLayout(jFrame1.getContentPane());
        jFrame1.getContentPane().setLayout(jFrame1Layout);
        jFrame1Layout.setHorizontalGroup(
            jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jFrame1Layout.setVerticalGroup(
            jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("gestion des visites dans un CM");
        setBackground(new java.awt.Color(0, 51, 51));

        jPanel1.setAutoscrolls(true);
        jPanel1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel2.setBackground(new java.awt.Color(0, 51, 51));
        jPanel2.setAutoscrolls(true);
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 28)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("GESTION DES VISITES DANS UN C.M");
        jPanel2.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 30, 540, 50));

        jPanel1.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1070, 110));

        jPanel3.setBackground(new java.awt.Color(0, 51, 51));
        jPanel3.setAutoscrolls(true);
        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        Menu1.setBackground(new java.awt.Color(0, 51, 51));
        Menu1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                Menu1MousePressed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Medecin");

        javax.swing.GroupLayout Menu1Layout = new javax.swing.GroupLayout(Menu1);
        Menu1.setLayout(Menu1Layout);
        Menu1Layout.setHorizontalGroup(
            Menu1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, Menu1Layout.createSequentialGroup()
                .addContainerGap(51, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(55, 55, 55))
        );
        Menu1Layout.setVerticalGroup(
            Menu1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, Menu1Layout.createSequentialGroup()
                .addContainerGap(21, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(19, 19, 19))
        );

        jPanel3.add(Menu1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 40, 170, -1));

        Menu2.setBackground(new java.awt.Color(0, 51, 51));
        Menu2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                Menu2MousePressed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Patient");

        javax.swing.GroupLayout Menu2Layout = new javax.swing.GroupLayout(Menu2);
        Menu2.setLayout(Menu2Layout);
        Menu2Layout.setHorizontalGroup(
            Menu2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Menu2Layout.createSequentialGroup()
                .addGap(58, 58, 58)
                .addComponent(jLabel4)
                .addContainerGap(58, Short.MAX_VALUE))
        );
        Menu2Layout.setVerticalGroup(
            Menu2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, Menu2Layout.createSequentialGroup()
                .addContainerGap(21, Short.MAX_VALUE)
                .addComponent(jLabel4)
                .addGap(19, 19, 19))
        );

        jPanel3.add(Menu2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 130, 170, -1));

        Menu3.setBackground(new java.awt.Color(0, 51, 51));
        Menu3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                Menu3MousePressed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Visiter");

        javax.swing.GroupLayout Menu3Layout = new javax.swing.GroupLayout(Menu3);
        Menu3.setLayout(Menu3Layout);
        Menu3Layout.setHorizontalGroup(
            Menu3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Menu3Layout.createSequentialGroup()
                .addGap(61, 61, 61)
                .addComponent(jLabel5)
                .addContainerGap(61, Short.MAX_VALUE))
        );
        Menu3Layout.setVerticalGroup(
            Menu3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, Menu3Layout.createSequentialGroup()
                .addContainerGap(21, Short.MAX_VALUE)
                .addComponent(jLabel5)
                .addGap(19, 19, 19))
        );

        jPanel3.add(Menu3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 230, 170, -1));

        jPanel1.add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 100, 190, 500));

        jTabbedPane1.setName(""); // NOI18N
        jTabbedPane1.setOpaque(true);

        nom.setToolTipText("Nom");
        nom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nomActionPerformed(evt);
            }
        });

        prenom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                prenomActionPerformed(evt);
            }
        });

        ajouterMed.setText("ajouter");
        ajouterMed.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ajouterMedActionPerformed(evt);
            }
        });

        ModifierMed.setText("modifier");
        ModifierMed.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ModifierMedActionPerformed(evt);
            }
        });

        supprimerMed.setText("supprimer");
        supprimerMed.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                supprimerMedActionPerformed(evt);
            }
        });

        jLabel2.setText("Nom :");

        jLabel3.setText("Prénoms :");

        jLabel6.setText("Grade :");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(prenom, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel2)
                            .addComponent(ajouterMed)
                            .addComponent(jLabel6))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(grade, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(ModifierMed)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(supprimerMed))
                            .addComponent(nom, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(70, 70, 70)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(prenom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(72, 72, 72)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(grade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addGap(39, 39, 39)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ajouterMed)
                    .addComponent(ModifierMed)
                    .addComponent(supprimerMed))
                .addContainerGap(161, Short.MAX_VALUE))
        );

        nom.getAccessibleContext().setAccessibleName("");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 430, Short.MAX_VALUE)
        );

        jTable1.setAutoCreateRowSorter(true);
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "CodeMed", "Nom", "Prénoms", "Grade"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 588, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(303, 303, 303))
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 418, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        jTabbedPane1.addTab("Liste des medecins", jPanel10);

        nomp.setToolTipText("Nom");
        nomp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nompActionPerformed(evt);
            }
        });

        prenomp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                prenompActionPerformed(evt);
            }
        });

        ajouterPat.setText("ajouter");
        ajouterPat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ajouterPatActionPerformed(evt);
            }
        });

        ModifierPat.setText("modifier");
        ModifierPat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ModifierPatActionPerformed(evt);
            }
        });

        supprimerPat.setText("supprimer");
        supprimerPat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                supprimerPatActionPerformed(evt);
            }
        });

        jLabel8.setText("Nom :");

        jLabel9.setText("Prénoms :");

        jLabel10.setText("Sexe :");

        Sexe.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Masculin", "Féminin" }));
        Sexe.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SexeActionPerformed(evt);
            }
        });

        jLabel11.setText("Adresse:");

        recherche.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                rechercheKeyPressed(evt);
            }
        });

        jLabel15.setText("Recherche : ");

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(prenomp, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel8)
                            .addComponent(ajouterPat)
                            .addComponent(jLabel10)
                            .addComponent(jLabel11)
                            .addComponent(jLabel15))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(recherche, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addComponent(ModifierPat)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(supprimerPat))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(nomp, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(Sexe, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(adresse))))
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(recherche, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel15))
                .addGap(38, 38, 38)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nomp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8))
                .addGap(40, 40, 40)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(prenomp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9))
                .addGap(38, 38, 38)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(Sexe, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(38, 38, 38)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(adresse, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(40, 40, 40)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ajouterPat)
                    .addComponent(ModifierPat)
                    .addComponent(supprimerPat))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTable2.setAutoCreateRowSorter(true);
        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "CodePat", "Nom", "Prénoms", "Sexe", "Adresse"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jTable2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable2MouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jTable2);

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel11Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 579, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel11Layout.createSequentialGroup()
                .addContainerGap(24, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 417, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addComponent(jPanel6, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("Liste des patients", jPanel11);

        ajouterV.setText("ajouter");
        ajouterV.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ajouterVActionPerformed(evt);
            }
        });

        ModifierV.setText("modifier");
        ModifierV.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ModifierVActionPerformed(evt);
            }
        });

        supprimerV.setText("supprimer");
        supprimerV.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                supprimerVActionPerformed(evt);
            }
        });

        jLabel12.setText("Medecin :");

        jLabel13.setText("Patient :");

        jLabel14.setText("Date :");

        MedecinCombobox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MedecinComboboxActionPerformed(evt);
            }
        });

        PatientCombobox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PatientComboboxActionPerformed(evt);
            }
        });

        dateV.setSelectedDate(Calendar.getInstance());
        dateV.setDateFormat(new SimpleDateFormat("dd/MM/yyyy"));

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addComponent(ajouterV)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(ModifierV)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(supprimerV))
                    .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel7Layout.createSequentialGroup()
                            .addGap(24, 24, 24)
                            .addComponent(jLabel14)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(dateV, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel7Layout.createSequentialGroup()
                            .addContainerGap()
                            .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabel12)
                                .addComponent(jLabel13))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(MedecinCombobox, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(PatientCombobox, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(MedecinCombobox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(55, 55, 55)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(PatientCombobox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel13))
                .addGap(49, 49, 49)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(dateV, javax.swing.GroupLayout.DEFAULT_SIZE, 25, Short.MAX_VALUE))
                .addGap(45, 45, 45)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ajouterV)
                    .addComponent(ModifierV)
                    .addComponent(supprimerV))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTable3.setAutoCreateRowSorter(true);
        jTable3.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Idvisiter", "Medecin", "Patient", "Date"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jTable3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable3MouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(jTable3);

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 557, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(15, Short.MAX_VALUE))
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel9Layout.createSequentialGroup()
                .addContainerGap(23, Short.MAX_VALUE)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 418, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jTabbedPane1.addTab("Liste des visites", jPanel9);

        jPanel1.add(jTabbedPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 110, 860, 480));
        jTabbedPane1.getAccessibleContext().setAccessibleName("");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void Menu1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Menu1MousePressed
        // TODO add your handling code here:
        Menu1.setBackground(ClicColor);
        Menu2.setBackground(DefautColor);
        Menu3.setBackground(DefautColor);
        jTabbedPane1.setSelectedIndex(0);
    }//GEN-LAST:event_Menu1MousePressed

    private void Menu2MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Menu2MousePressed
        // TODO add your handling code here:
        Menu2.setBackground(ClicColor);
        Menu1.setBackground(DefautColor);
        Menu3.setBackground(DefautColor);
        jTabbedPane1.setSelectedIndex(1);
        FillDataPat();
    }//GEN-LAST:event_Menu2MousePressed


    private void Menu3MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Menu3MousePressed
        // TODO add your handling code here:
        Menu1.setBackground(DefautColor);
        Menu2.setBackground(DefautColor);
        Menu3.setBackground(ClicColor);
        jTabbedPane1.setSelectedIndex(2);
        MedecinCombobox.removeAllItems();
        PatientCombobox.removeAllItems();

        Transaction transaction=null;
         Session session=HibernateUtil.getSessionFactory().openSession();
        try {
             transaction= session.beginTransaction();
            String SQL_QUERY="from Medecin m" ;
            String SQL_QUERY1="from Patient p" ;
       
      Query query = session.createQuery(SQL_QUERY);
for(Iterator it=query.iterate();it.hasNext();){
    Medecin med=(Medecin)it.next();
    MedecinCombobox.addItem(med.getCodemed()+"-"+med.getNom()+" "+med.getPrenom());
}
Query query1 = session.createQuery(SQL_QUERY1);
for(Iterator it=query1.iterate();it.hasNext();){
    Patient pat=(Patient)it.next();
    PatientCombobox.addItem(pat.getCodepat()+"-"+pat.getNom()+" "+pat.getPrenom());
}
        
        session.close();
        transaction.commit();
        } catch (Exception e) {
            
        }
         FillDataVisiter();
    }//GEN-LAST:event_Menu3MousePressed

    private void prenomActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_prenomActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_prenomActionPerformed

    private void nomActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nomActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nomActionPerformed

    private void FillData(){
        Transaction transaction=null;
        Session session=HibernateUtil.getSessionFactory().openSession();
        try {
            String SQL_QUERY = "from Medecin medecin";
            Query query = session.createQuery(SQL_QUERY);
            List<Medecin> medecins = query.list();
            session.close();
// Créez une instance de votre modèle de tableau personnalisé avec les résultats
            MedecinTableModel tableModel = new MedecinTableModel(medecins);
            jTable1.setModel(tableModel);
            nom.setText("");
            prenom.setText("");
            grade.setText("");
        } 
             catch (Exception e) {
              if(transaction!=null){
                  transaction.rollback();
              } 
                 
             }
        
        
    }
    
     private void FillDataPat(){
        Transaction transaction=null;
        Session session=HibernateUtil.getSessionFactory().openSession();
        try {
            String SQL_QUERY = "from Patient patient";
            Query query = session.createQuery(SQL_QUERY);
            List<Patient> patients = query.list();
            session.close();
// Créez une instance de votre modèle de tableau personnalisé avec les résultats
            PatientTableModel tableModel = new PatientTableModel(patients);
            jTable2.setModel(tableModel);
            nomp.setText("");
            prenomp.setText("");
            adresse.setText("");
        } 
             catch (Exception e) {
              if(transaction!=null){
                  transaction.rollback();
              } 
                 
             }
        
        
    }
     
     private void FillDataVisiter(){
 VisiterTableModel tableModel = new VisiterTableModel();


Session session = HibernateUtil.getSessionFactory().openSession();

try {
    // Commencez une transaction
    session.beginTransaction();

String hql = "SELECT v.idvisiter, v.medecin.nom, v.medecin.prenom, v.patient.nom,v.patient.prenom, v.date " +
             "FROM Visiter v";
Query query = session.createQuery(hql);
List<Object[]> results = query.list();

tableModel.setData(results);
jTable3.setModel(tableModel);
    // Validez la transaction
    session.getTransaction().commit();
} catch (HibernateException e) {
    if (session.getTransaction() != null) {
        session.getTransaction().rollback();
    }
    e.printStackTrace();
} 

    }
    
    private void ajouterMedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ajouterMedActionPerformed
        // TODO add your handling code here:
        Transaction transaction=null;
        Session session=HibernateUtil.getSessionFactory().openSession();
        try {
            
            transaction= session.beginTransaction();
            String nommed=nom.getText();
            String prenommed=prenom.getText();
            String grademed=grade.getText();
            if(nommed.isEmpty()||prenommed.isEmpty()||grademed.isEmpty()){
                JOptionPane.showMessageDialog(null, "Veuillez remplir tous les champs!", "Erreur",JOptionPane.ERROR_MESSAGE);
            }else{
            Medecin med=new Medecin();
            med.setNom(nommed);
            med.setPrenom(prenommed);
            med.setGrade(grademed);
            session.save(med);
            transaction.commit();
            FillData();
            JOptionPane.showMessageDialog(null, "Ajout réussi!");
            }
            
        } 
             catch (Exception e) {
              if(transaction!=null){
                  transaction.rollback();
              }   
             }
    }//GEN-LAST:event_ajouterMedActionPerformed

    private void supprimerMedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_supprimerMedActionPerformed
        // TODO add your handling code here:
            
            if(jTable1.getSelectedRowCount()==0){
                JOptionPane.showMessageDialog(null,"Veuiillez sélectionner une ligne!", "Erreur",JOptionPane.ERROR_MESSAGE);
            }
            else{
            int result=JOptionPane.showConfirmDialog(null, "Voulez-vous confirmer?", "Confirmation",JOptionPane.YES_NO_OPTION);
            int index=this.jTable1.getSelectedRow();
            if ( index!=-1 && result==JOptionPane.YES_OPTION) 
                {
                    int medecin=(int) this.jTable1.getValueAt(index,0);
                    deleteMed(medecin);
                    FillData();
                     JOptionPane.showMessageDialog(null, "Suppression réussie!");
                } 
            }

    }//GEN-LAST:event_supprimerMedActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        // TODO add your handling code here:
            int index=this.jTable1.getSelectedRow();
            if ( index!=-1)
            { int code = (int) this.jTable1.getValueAt(index,0);
                voirMed(code);
            }
        
    }//GEN-LAST:event_jTable1MouseClicked

    private void ModifierMedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ModifierMedActionPerformed
        // TODO add your handling code here:
        if(jTable1.getSelectedRowCount()==0){
                JOptionPane.showMessageDialog(null,"Veuiillez sélectionner une ligne!", "Erreur",JOptionPane.ERROR_MESSAGE);
            }
        else{
        int index=this.jTable1.getSelectedRow();
        int result=JOptionPane.showConfirmDialog(null, "Voulez-vous confirmer?", "Confirmation",JOptionPane.YES_NO_OPTION);
            if ( index!=-1 && result==JOptionPane.YES_OPTION) 
                {
                    int medecin=(int) this.jTable1.getValueAt(index,0);
                    UpdateMed(medecin);
                    FillData();
                    JOptionPane.showMessageDialog(null, "Modification réussie!");
                } 
        }      
    }//GEN-LAST:event_ModifierMedActionPerformed

    private void nompActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nompActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nompActionPerformed

    private void prenompActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_prenompActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_prenompActionPerformed

    private void ajouterPatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ajouterPatActionPerformed
        // TODO add your handling code here:
        Transaction transaction=null;
        Session session=HibernateUtil.getSessionFactory().openSession();
        try {
            
            transaction= session.beginTransaction();
            String nompat=nomp.getText();
            String prenompat=prenomp.getText();
            String sexe=(String)Sexe.getSelectedItem();
            String adressepa=adresse.getText();
            if(nompat.isEmpty()||prenompat.isEmpty()||sexe.isEmpty()||adressepa.isEmpty()){
                JOptionPane.showMessageDialog(null, "Veuillez remplir tous les champs!", "Erreur",JOptionPane.ERROR_MESSAGE);
            }else{
            Patient pat=new Patient();
            pat.incrementCodePat();
            pat.setNom(nompat);
            pat.setPrenom(prenompat);
            pat.setSexe(sexe);
            pat.setAdresse(adressepa);
            session.save(pat);
            transaction.commit();
            FillDataPat();
            JOptionPane.showMessageDialog(null, "Ajout réussi!");
            }
            
        } 
             catch (Exception e) {
              if(transaction!=null){
                  transaction.rollback();
              }   
             }
    }//GEN-LAST:event_ajouterPatActionPerformed

    private void ModifierPatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ModifierPatActionPerformed
        // TODO add your handling code here:
        if(jTable2.getSelectedRowCount()==0){
                JOptionPane.showMessageDialog(null,"Veuiillez sélectionner une ligne!", "Erreur",JOptionPane.ERROR_MESSAGE);
            }else{
         int index=this.jTable2.getSelectedRow();
         int result=JOptionPane.showConfirmDialog(null, "Voulez-vous confirmer?", "Confirmation",JOptionPane.YES_NO_OPTION);
            if ( index!=-1 && result==JOptionPane.YES_OPTION) 
                {
                    int patient=(int) this.jTable2.getValueAt(index,0);
                    UpdatePat(patient);
                    FillDataPat();
                    JOptionPane.showMessageDialog(null, "Modification réussie!");
                } 
        }
    }//GEN-LAST:event_ModifierPatActionPerformed

    private void supprimerPatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_supprimerPatActionPerformed
        // TODO add your handling code here:
        if(jTable2.getSelectedRowCount()==0){
                JOptionPane.showMessageDialog(null,"Veuiillez sélectionner une ligne!", "Erreur",JOptionPane.ERROR_MESSAGE);
            }
        else{
         int index=this.jTable2.getSelectedRow();
          int result=JOptionPane.showConfirmDialog(null, "Voulez-vous confirmer?", "Confirmation",JOptionPane.YES_NO_OPTION);
            if ( index!=-1 && result==JOptionPane.YES_OPTION) 
                {
                    int pat=(int) this.jTable2.getValueAt(index,0);
                    deletePat(pat);
                    FillDataPat();
                     JOptionPane.showMessageDialog(null, "Suppression réussie!");
                } 
        }
    }//GEN-LAST:event_supprimerPatActionPerformed

    private void jTable2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable2MouseClicked
        // TODO add your handling code here:
        int index=this.jTable2.getSelectedRow();
            if ( index!=-1)
            { int code = (int) this.jTable2.getValueAt(index,0);
                voirPat(code);
            }
    }//GEN-LAST:event_jTable2MouseClicked

    private void SexeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SexeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_SexeActionPerformed

    private void jTable3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable3MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jTable3MouseClicked

    private void MedecinComboboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MedecinComboboxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_MedecinComboboxActionPerformed

    private void PatientComboboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PatientComboboxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_PatientComboboxActionPerformed

    private void supprimerVActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_supprimerVActionPerformed
        // TODO add your handling code here:
        if(jTable3.getSelectedRowCount()==0){
                JOptionPane.showMessageDialog(null,"Veuiillez sélectionner une ligne!", "Erreur",JOptionPane.ERROR_MESSAGE);
            }
        else{
        int index=this.jTable3.getSelectedRow();
          int result=JOptionPane.showConfirmDialog(null, "Voulez-vous confirmer?", "Confirmation",JOptionPane.YES_NO_OPTION);
            if ( index!=-1 && result==JOptionPane.YES_OPTION) 
                {
                    int visite=(int) this.jTable3.getValueAt(index,0);
                    deleteV(visite);
                    FillDataVisiter();
                     JOptionPane.showMessageDialog(null, "Suppression réussie!");
                }
        }
    }//GEN-LAST:event_supprimerVActionPerformed

    public void deleteV(int idvisiter)
{
            Transaction transaction = null;
            Session session=HibernateUtil.getSessionFactory().openSession();        
                  try {
            transaction = session.beginTransaction();
            Visiter visite=(Visiter)session.load(Visiter.class,idvisiter);
            session.delete(visite);
            transaction.commit();
                } catch (HibernateException e) {
            transaction.rollback();
            e.printStackTrace();
        } 
}
                  
    private void ModifierVActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ModifierVActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ModifierVActionPerformed

    private void ajouterVActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ajouterVActionPerformed
        // TODO add your handling code here:
        
       Transaction transaction = null;
Session session = HibernateUtil.getSessionFactory().openSession();
try {
    transaction = session.beginTransaction();
    Visiter v = new Visiter();
    String dateTexte = dateV.getText();
    SimpleDateFormat dateFormat = new SimpleDateFormat("dd/MM/yyyy");
    // Récupération du médecin sélectionné
    String item = MedecinCombobox.getSelectedItem().toString();
    String[] parts = item.split("-");
    int codemed = Integer.parseInt(parts[0]);
    Medecin medecin = (Medecin) session.get(Medecin.class, codemed);
    v.setMedecin(medecin);
    // Récupération du patient sélectionné
    String item1 = PatientCombobox.getSelectedItem().toString();
    String[] parts1 = item1.split("-");
    int codep = Integer.parseInt(parts1[0]);
    Patient patient = (Patient) session.get(Patient.class, codep);
    v.setPatient(patient);

    // Conversion de la date
    Date date = dateFormat.parse(dateTexte);
    v.setDate(date);

    session.save(v);
    transaction.commit();
    FillDataVisiter();
    JOptionPane.showMessageDialog(null, "Ajout réussi!");
} catch (Exception e) {
    if (transaction != null) {
        transaction.rollback();
    }
    e.printStackTrace();
} 

    }//GEN-LAST:event_ajouterVActionPerformed

    private void rechercheKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_rechercheKeyPressed
            String recherche = this.recherche.getText();
            Session session = HibernateUtil.getSessionFactory().openSession();    
            String hql = "FROM Patient p WHERE p.nom LIKE :recherche OR CAST(p.codepat AS text) = :recherche";
            Query query = session.createQuery(hql);
            query.setParameter("recherche",recherche);
            List<Patient> patients = query.list();
            PatientTableModel tableModel = new PatientTableModel(patients);
            jTable2.setModel(tableModel);
            if (recherche.isEmpty()) {
            FillDataPat();
            }  
    }//GEN-LAST:event_rechercheKeyPressed
    
    public void UpdateMed(Integer Codemed)
{
            Transaction transaction = null;
            Session session=HibernateUtil.getSessionFactory().openSession();        
            try {
            transaction = session.beginTransaction();
            Medecin med=(Medecin)session.load(Medecin.class,Codemed);
            med.setNom(this.nom.getText());
            med.setPrenom(this.prenom.getText());
            med.setGrade(this.grade.getText());
            session.update(med);
            transaction.commit();
                }catch (HibernateException e) {
            transaction.rollback();
            e.printStackTrace();
        }        
}
    public void UpdatePat(Integer Codepat)
{
            Transaction transaction = null;
            Session session=HibernateUtil.getSessionFactory().openSession();        
            try {
            transaction = session.beginTransaction();
            Patient pat=(Patient)session.load(Patient.class,Codepat);
            pat.setNom(this.nomp.getText());
            pat.setPrenom(this.prenomp.getText());
            pat.setSexe((String) this.Sexe.getSelectedItem());
            pat.setAdresse(this.adresse.getText());
            session.update(pat);
            transaction.commit();
                }catch (HibernateException e) {
            transaction.rollback();
            e.printStackTrace();
        }        
}
    public void deleteMed(Integer Codemed)
{
            Transaction transaction = null;
            Session session=HibernateUtil.getSessionFactory().openSession();        
                  try {
            transaction = session.beginTransaction();
            Medecin med=(Medecin)session.load(Medecin.class,Codemed);
            session.delete(med);
            transaction.commit();
                } catch (HibernateException e) {
            transaction.rollback();
            e.printStackTrace();
        }        
}
    
    public void deletePat(Integer Codepat)
{
            Transaction transaction = null;
            Session session=HibernateUtil.getSessionFactory().openSession();        
                  try {
            transaction = session.beginTransaction();
            Patient pat=(Patient)session.load(Patient.class,Codepat);
            session.delete(pat);
            transaction.commit();
                } catch (HibernateException e) {
            transaction.rollback();
            e.printStackTrace();
        }        
}
   
   public void voirMed(int codemed)
{
             Transaction transaction = null;
             Session session=HibernateUtil.getSessionFactory().openSession();        
                try {
             transaction = session.beginTransaction();
             Medecin med=(Medecin)session.load(Medecin.class,codemed);
             med.getCodemed();
             nom.setText(med.getNom());
             prenom.setText(med.getPrenom());
             grade.setText(med.getGrade());
             transaction.commit();
                } catch (HibernateException e) {
             transaction.rollback();
             e.printStackTrace();
            }            
}
   
   
   public void voirPat(int codepat)
{
             Transaction transaction = null;
             Session session=HibernateUtil.getSessionFactory().openSession();        
                try {
             transaction = session.beginTransaction();
             Patient pat=(Patient)session.load(Patient.class,codepat);
             pat.getCodepat();
             nomp.setText(pat.getNom());
             prenomp.setText(pat.getPrenom());
             String sexe = pat.getSexe();
             int index = -1; // initialisation de l'index à une valeur par défaut

// Recherche de l'index correspondant à la valeur du sexe
            for (int i = 0; i < Sexe.getItemCount(); i++) {
            if (Sexe.getItemAt(i).equals(sexe)) {
             index = i;
            break;
            }
            }
// Sélection de l'élément correspondant à l'index trouvé
             if (index != -1) {
                Sexe.setSelectedIndex(index);
                }
             adresse.setText(pat.getAdresse());
             transaction.commit();
                } catch (HibernateException e) {
             transaction.rollback();
             e.printStackTrace();
            }   
}
   
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Dasboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Dasboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Dasboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Dasboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Dasboard().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> MedecinCombobox;
    private javax.swing.JPanel Menu1;
    private javax.swing.JPanel Menu2;
    private javax.swing.JPanel Menu3;
    private javax.swing.JButton ModifierMed;
    private javax.swing.JButton ModifierPat;
    private javax.swing.JButton ModifierV;
    private javax.swing.JComboBox<String> PatientCombobox;
    private javax.swing.JComboBox<String> Sexe;
    private javax.swing.JTextField adresse;
    private javax.swing.JButton ajouterMed;
    private javax.swing.JButton ajouterPat;
    private javax.swing.JButton ajouterV;
    private datechooser.beans.DateChooserCombo dateV;
    private javax.swing.JTextField grade;
    private javax.swing.JFrame jFrame1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTable jTable3;
    private javax.swing.JTextField nom;
    private javax.swing.JTextField nomp;
    private javax.swing.JTextField prenom;
    private javax.swing.JTextField prenomp;
    private javax.swing.JTextField recherche;
    private javax.swing.JButton supprimerMed;
    private javax.swing.JButton supprimerPat;
    private javax.swing.JButton supprimerV;
    // End of variables declaration//GEN-END:variables

    
    

    

    
}
